name: BoringSSL Builder

on:
  push:
    branches: [ "main-with-bazel" ]
  pull_request:
    branches: [ "main-with-bazel" ]
  
  workflow_dispatch:

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main-with-bazel

    - name: Download Zig
      run: |
        cd ~
        curl -L -O https://ziglang.org/builds/zig-linux-x86_64-0.12.0-dev.1168+54a4f24ea.tar.xz
        tar -xf zig-linux-x86_64-0.12.0-dev.1168+54a4f24ea.tar.xz

    - uses: seanmiddleditch/gha-setup-ninja@master
    
    - name: Build BorignSSL
      run: |
        cd ${{ github.workspace }}
        export PATH=~/zig-linux-x86_64-0.12.0-dev.1168+54a4f24ea/:$PATH
        export CC="zig cc"
        export CXX="zig c++"
        export ASM="zig cc"


        patch CMakeLists.txt < CMakeLists.txt.patch
        cmake -GNinja -DCMAKE_BUILD_TYPE=Release -B build
        ninja -C build

        zig build -Doptimize=ReleaseFast

    - name: Create Artifact Directory
      run: |
        cd ${{ github.workspace }}
        mkdir -p x86_64-linux-boringssl_zig/lib
        cp build/libcrypto.a x86_64-linux-boringssl_zig/lib/libcrypto.a
        cp build/libssl.a x86_64-linux-boringssl_zig/lib/libssl.a
        cp -r src/include/ x86_64-linux-boringssl_zig/

    - name: Upload CMake Build
      uses: actions/upload-artifact@v3.1.3
      with:
        name: x86_64-linux-boringssl_zig
        path: ${{ github.workspace }}/x86_64-linux-boringssl_zig/**

    - name: Upload Zig build
      uses: actions/upload-artifact@v3.1.3
      with:
        name: x86_64-linux-boringssl_zig-build
        path: ${{ github.workspace }}/zig-out/**

#   build-windows:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Download Zig
#       run: |
#         cd $HOME
#         curl -L -O https://ziglang.org/builds/zig-windows-x86_64-0.12.0-dev.983+78f2ae7f2.zip
#         Expand-Archive zig-windows-x86_64-0.12.0-dev.983+78f2ae7f2.zip -DestinationPath $HOME

#     - uses: seanmiddleditch/gha-setup-ninja@master

#     - name: Set up NASM
#       uses: ilammy/setup-nasm@v1.4.0

#     - name: Build BorignSSL
#       run: |
#         cd ${{ github.workspace }}
#         $env:PATH += ";$HOME/zig-windows-x86_64-0.12.0-dev.983+78f2ae7f2/"
#         $env:CC = "zig cc -target x86_64-windows-msvc"
#         $env:CXX = "zig c++ -target x86_64-windows-msvc"
#         mkdir build && cd build
#         cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
#         ninja

# #        $env:ASM ="zig cc"

#     - name: Create Artifact Directory
#       run: |
#         cd ${{ github.workspace }}
#         mkdir -p x86_64-windows-boringssl_zig/lib
#         cp build/crypto/*.lib x86_64-windows-boringssl_zig/lib/
#         cp build/ssl/*.lib x86_64-windows-boringssl_zig/lib/
#         cp -Recurse include/ x86_64-windows-boringssl_zig/

#     - name: Upload Artifact
#       uses: actions/upload-artifact@v3.1.3
#       with:
#         name: x86_64-windows-boringssl_zig
#         path: ${{ github.workspace }}/x86_64-windows-boringssl_zig/**
